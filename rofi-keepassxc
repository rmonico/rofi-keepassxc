#!/bin/sh

clip_username() {
	echo "$DBPASS" | keepassxc-cli show "$DB" "$ENTRY" | grep 'UserName:' | cut -b 11- | xclip -selection clipboard
}

clip_password() {
	echo "$DBPASS" | keepassxc-cli clip "$DB" "$ENTRY" "$TIMEOUT"
}

generate_password() {
	CHAR_NUM=$(rofi -dmenu -i -p "Number of password characters" -l 0 -width 400)

	[ ! "$CHAR_NUM" ] && exit

	NUMBERS=$(printf "Yes\nNo" | rofi -dmenu -i -p "Use numbers?" -l 2 -width 350)

	case "$NUMBERS" in
		Yes) NUMBERS="-n" ;;
		No) NUMBERS="" ;;
		*) exit ;;
	esac

	SPECIAL=$(printf "Yes\nNo" | rofi -dmenu -i -p "Use special characters?" -l 2 -width 400)

	case "$SPECIAL" in
		Yes) SPECIAL=" -s" ;;
		No) SPECIAL="" ;;
		*) exit ;;
	esac

	EXT_ASCII=$(printf "Yes\nNo" | rofi -dmenu -i -p "Use extended ASCII?" -l 2 -width 400)

	case "$EXT_ASCII" in
		Yes) EXT_ASCII=" -e" ;;
		No) EXT_ASCII="" ;;
		*) exit ;;
	esac
}

clip_element() {
	if echo "$ELEMENT" | grep 'Title: '
	then
		echo "$ELEMENT" | cut -b 8- | xclip -selection clipboard
	elif echo "$ELEMENT" | grep 'UserName: '
	then
		clip_username
	elif echo "$ELEMENT" | grep 'Password: '
	then
		clip_password
	elif echo "$ELEMENT" | grep 'URL: '
	then
		echo "$ELEMENT" | cut -b 6- | xclip -selection clipboard
	elif echo "$ELEMENT" | grep 'Notes: '
	then
		echo "$ELEMENT" | cut	-b 8- | xclip -selection clipboard
	fi
}

edit_element() {
	if echo "$ELEMENT" | grep 'Title: '
	then
		NEW_TITLE=$(rofi -dmenu -i -p "Enter new entry title" -l 0 -width 400)
		echo "$DBPASS" | keepassxc-cli edit -t "$NEW_TITLE" "$DB" "$ENTRY"
	elif echo "$ELEMENT" | grep 'UserName: '
	then
		NEW_USERNAME=$(rofi -dmenu -i -p "Enter new entry username" -l 0 -width 400)
		echo "$DBPASS" | keepassxc-cli edit -u "$NEW_USERNAME" "$DB" "$ENTRY"
	elif echo "$ELEMENT" | grep 'Password: '
	then
		ACTION=$(printf "Enter password\nGenerate password" | rofi -dmenu -i -p "Choose action" -l 2 width 350)

		case "$ACTION" in
			"Enter password")
				NEW_PASSWORD=$(rofi -dmenu -i -p "Enter new entry password" -l 0 -password)
				printf "%s" "$DBPASS\n$NEW_PASSWORD" | keepassxc-cli edit -p "$DB" "$ENTRY"
				;;
			"Generate password")
				generate_password
				echo "$DBPASS" | keepassxc-cli edit -g -L "$(echo "$CHAR_NUM $NUMBERS$SPECIAL$EXT_ASCII")" --exclude-similar "$DB" "$ENTRY"
				;;
		esac

	elif echo "$ELEMENT" | grep 'URL: '
	then
		NEW_URL=$(rofi -dmenu -i -p "Enter new entry URL" -l 0 -width 400)
		echo "$DBPASS" | keepassxc-cli edit --url "$NEW_URL" "$DB" "$ENTRY"
	elif echo "$ELEMENT" | grep 'Notes: '
	then
		rofi -e "You cannot edit notes for entries now."
	fi
}

show_entry_info() {
	ELEMENT=$(echo "$DBPASS" | keepassxc-cli show "$DB" "$ENTRY" | grep -Ev 'Enter|?*/' | rofi -dmenu -i -p "Info" -l 7 -width 350)

	[ "$ELEMENT" ] && ACTION=$(printf "Clip\nEdit" | rofi -dmenu -i -p "Choose action" -l 2)

	case "$ACTION" in
		Clip) clip_element ;;
		Edit) edit_element ;;
	esac
}

delete_entry() {
	echo "$DBPASS" | keepassxc-cli rm "$DB" "$ENTRY"
	rofi -e "Deleted \"$ENTRY\" entry"
}

add_entry() {
	if [ "$ENTRY" ]; then
		ACTION=$(printf "Yes\nNo" | rofi -dmenu -i -p "Add \"$ENTRY\" entry?" -l 2 -width 400)

		case "$ACTION" in
			Yes)
				USERNAME_=$(rofi -dmenu -i -p "Enter entry username" -l 0 -width 400)
				[ ! "$USERNAME_" ] && exit

				ACTION=$(printf "Enter password\nGenerate password" | rofi -dmenu -i -p "Choose action" -l 2 -width 300)
				[ ! "$ACTION" ] && exit
				;;
			*) exit ;;
		esac

	else exit; fi

	case "$ACTION" in
		"Enter password")
			PASSWORD=$(rofi -dmenu -i -p "Enter new entry password" -l 0 -password -width 400)
			printf "%s" "$DBPASS\n$PASSWORD" | keepassxc-cli add "$DB" "$ENTRY" -u "$USERNAME_" -p
			;;
		"Generate password")
			generate_password
			echo "$DBPASS" | keepassxc-cli add "$DB" "$ENTRY" -u "$USERNAME_" -g -L "$(echo "$CHAR_NUM $NUMBERS$SPECIAL$EXT_ASCII")"
			rofi -e "Successfully added \"$ENTRY\" entry"
			;;
		*) exit
	esac

}

choose_action() {
	[ "$ENTRY" ] && ACTION="$(printf "Clip username\nClip password\nShow info\nDelete" | rofi -dmenu -i -p "Choose action for \"$ENTRY\" entry" -l 4 -width 400)"

	case "$ACTION" in
		"Clip username") clip_username ;;
		"Clip password") clip_password ;;
		"Show info") show_entry_info ;;
		Delete) delete_entry ;;
	esac
}

while [ -n "$1" ]; do
    case "$1" in
        -h | --help)
            echo "
        usage: rofi-keepassxc [-h] [-d]

        arguments:
        -h, --help                show this help message and exit
        -d, --database [file]     specify keepass database file path
        -t, --timout [value]      specify a timout in second for clipped password; default to 15 seconds

            "
            exit;;
        -d | --database) DB="$2"; shift; shift;;
        -t | --timeout) TIMEOUT="$2"; shift; shift;;
        *) echo "[E] Invalid argument."; exit ;;
    esac
done

[ ! "$TIMEOUT" ] && TIMEOUT=15  # default TIMEOUT value if not specified
CACHE=$HOME/.cache/rofi-keepassxc/
mkdir -p "$CACHE"

DBPASS=$(rofi -dmenu -i -p "Enter your database password" -l 0 -password -width 500)
[ ! "$DBPASS" ] && exit

ERROR_PASS='Error while reading the database'
CHECK_PASS=$(echo "$DBPASS" | keepassxc-cli open "$DB" >"$CACHE/tmp" 2>&1 && grep -oh "$ERROR_PASS" "$CACHE/tmp")
ERROR_DB='Failed to open database file'
CHECK_DB=$(echo "$DBPASS" | keepassxc-cli open "$DB" >"$CACHE/tmp" 2>&1 && grep -oh "$ERROR_DB" "$CACHE/tmp")

if [ "$CHECK_PASS" = "$ERROR_PASS" ]; then
	rofi -e "$ERROR_PASS password"
elif [ "$CHECK_DB" = "$ERROR_DB" ]; then
	rofi -e "$ERROR_DB"
else
  echo "$DBPASS" | keepassxc-cli ls "$DB" | grep -Ev 'Enter|?*/' | sort >"$CACHE/tmp"
	ELEMENTS_NUM=$([ "$(wc -l < "$CACHE/tmp")" -gt 20 ] && echo 20)

	ENTRY=$(cat "$CACHE/tmp" | rofi -dmenu -i -p "Entry list" -l "$ELEMENTS_NUM" -width 350)

	if ! grep -q "$ENTRY" "$CACHE/tmp"; then
	add_entry || exit
	else choose_action || exit
	fi
fi

# rm -r "$CACHE/tmp"
